<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jxdedu.dao.DeptDao">

	<select id="getDeptRowNum" resultType="int">
		select count(*) from dept
	</select>
	<select id="getSubDept" resultType="Dept">
	<![CDATA[
		select * from (
				select rownum r,t.* from (
					select * from Dept order by deptid) t 
				where rownum<=#{1}) 
			where r>=#{0}
	]]>
	</select>
	
	
	<select id="fuzzySrarchGetDeptRowNum"  resultType="int">
		select count(*) from dept where deptName like '%'||#{deptName}||'%'
	</select>
	
	<select id="fuzzySearchDeptByDeptName" resultType="Dept">
	<![CDATA[
		select * from (
				select rownum r,t.* from (
					select * from Dept 
					where deptName like '%'||#{0}||'%'
					order by deptid) t 
				where rownum<=#{2}) 
			where r>=#{1}
	]]>
	</select>
	
	<!-- <select id="fuzzySearchDept" resultType="Dept">
		select * from dept
		<where>
			<if test="_parameter!=null and _parameter=''">
				deptName like '%'||#{deptName}||'%'
			</if>
		</where>
	</select> -->
	
	<insert id="addDept" parameterType="Dept">
		insert into dept(deptId,deptName,deptAddress) 
					values(dept_seq.nextval,#{deptName},#{deptAddress})
	</insert>
	
	<select id="getDeptByDeptId" resultType="Dept">
		select * from dept where deptid=#{deptId}
	</select>
	
	<delete id="delDept">
		delete from dept where deptId in(
			<!-- collection：根据传来的参数放在上面容器里来写值，数组写array，list写list item：变量名，放每次遍历到的值 
				separator：用循环吧容器中数据遍历出来，以是什么分隔 -->
			<foreach collection="array" item="deptId" separator=",">
				#{deptId}
			</foreach>
		)
	</delete>
	
	<update id="editDept" parameterType="Dept">
		update dept 
		set deptName=#{deptName},deptAddress=#{deptAddress} 
		where deptId=#{deptId}
	</update>
</mapper>